# 服务器配置
server:
  port: 8888
  servlet:
    context-path: /vediobigdata

# spring配置
spring:
  jackson:
    time-zone: GMT+8
  # 数据源配置
  datasource:
    self:
      jdbc-url: jdbc:mysql://100.11.44.162:3306/vedio-big-data?allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: user1
      password: 123456
      driver-class-name: com.mysql.jdbc.Driver

      # Druid连接池配置
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始化
      initialSize: 3
      # 最大
      maxActive: 20
      # 最小
      minIdle: 3
      # 最大连接等待超时时间
      maxWait: 60000
      # 打开PSCache,并且指定每个连接PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间,单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置监控统计拦截的filters,去掉后监控界面sql将无法统计,'wall'用于防火墙
      filters: stat, wall, log4j2
      logSlowSql: true

    datavaluate:
      jdbc-url: jdbc:phoenix:100.11.211.91,100.11.211.92,100.11.211.93:2181
      username:
      password:
      driver-class-name: org.apache.phoenix.jdbc.PhoenixDriver

#      # Druid连接池配置
#      type: com.alibaba.druid.pool.DruidDataSource
#      # 初始化
#      initialSize: 3
#      # 最大
#      maxActive: 20
#      # 最小
#      minIdle: 3
#      # 最大连接等待超时时间
#      maxWait: 60000
#      # 打开PSCache,并且指定每个连接PSCache的大小
#      poolPreparedStatements: true
#      maxPoolPreparedStatementPerConnectionSize: 20
#      validationQuery: select 'x'
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      # 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
#      timeBetweenEvictionRunsMillis: 60000
#      # 配置一个连接在池中最小生存的时间,单位是毫秒
#      minEvictableIdleTimeMillis: 300000
#      # 配置监控统计拦截的filters,去掉后监控界面sql将无法统计,'wall'用于防火墙
#      filters: stat, wall, log4j2
#      logSlowSql: true

  elasticsearch:
    jest:
      uris: http://100.11.209.171:9200,http://100.11.209.151:9200,http://100.11.209.173:9200
      username: elastic
      password: jxjp123
      #读取超时
      read-timeout: 60s
      #连接超时
      connection-timeout: 20s
      multi-threaded: true


  # spring jpa 配置
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
    hibernate:
      ddl-auto: none
    database: mysql

# 车辆稽查数据源配置
car:
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    jdbc-url: jdbc:oracle:thin:@100.11.211.98:1521/SICSDB
    username: si01
    password: jp2011

# 海康-车辆统计数据源配置
vehicle:
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    jdbc-url: jdbc:oracle:thin:@100.11.40.2:1521/ORCL
    username: jinpeng
    password: hik_jinpeng

# 海康-wifi统计数据源配置
wifi:
  datasource:
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://100.11.210.43:5432/was
    username: jinpeng
    password: hik_jinpeng

# 视频联网平台数据源配置
zhvmp:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    jdbc-url: jdbc:mysql://100.11.44.219:3306/zhvmp?allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: 123456

socketio:
  host: 100.11.209.166

file:
  upload:
    rootPath: /home/vediobigdata/uploadfiles

elasticsearch:
  server:
    http: http://elastic:jxjp123@100.11.209.171:9200
